plugins {
	id("application")
}

def localPropsFile = rootProject.file("local.properties")
def properties = new Properties()
def outputDirectory = ""

if (localPropsFile.exists()) {
    localPropsFile.withInputStream { inputStream ->
        properties.load(inputStream)
    }
}

application {
    mainClassName = 'com.icst.android.appstudio.ExtensionGenerator'
}

task generateExtensions(type: JavaExec) {
    File outputDir = new File("${buildDir}/extensions");
    outputDir.mkdirs();
	
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.icst.android.appstudio.ExtensionGenerator'

    if (properties.getProperty('outputDirectory') != null) {
        args = [properties.getProperty('outputDirectory')]
        println "Setting up output directory to ${properties.getProperty('outputDirectory')} from local.properties"
    } else {
        args = [outputDir.getAbsolutePath()]
        println "Setting up output directory to ${outputDir.getAbsolutePath()}"
        println "For customizing output directory of extensions then add outputDirectory=\"yourOutputDirectory\" to local.properties"
    }
}

dependencies {
    implementation project(":library")
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

project.afterEvaluate {
    tasks.named('assemble').configure {
        dependsOn generateExtensions
    }
}
